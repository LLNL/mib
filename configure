#!/bin/bash
# configure
# This is not an autoconf generated file.  It's just an intermediary hack to
# notice if I need to use the BGL cross compilers.  Once I sort out real 
# autoconf stuff we'll get rid of this.

PROG=$(basename $0)

NODEATTR=`/usr/bin/which nodeattr 2>/dev/null`
[ X"$NODEATTR" == X ] && { echo "This script expects a cluster with the Genders \"nodeattr\" function installed"; exit 1; } 
CLUSTER=`nodeattr -v cluster`
[ X"$CLUSTER" == X ] && { echo "\"nodeattr -v cluster\" failed to determine the cluster were on, if any"; exit 1; }

usage ()
{
	[ X"$1" == X ] || { echo "$1"; echo; } 
	echo "$PROG"
	echo "Set up for a compile if possible"
	echo "Print an error message otherwise"
	echo "This script establishes the compiler to use in the makefile based on the"
	echo "cluster as returned by \"nodeattr -v cluster\", and sets the version,"
	echo "based on the value of VERSION in the \"META\" file, in the source at"
	echo "\"mib.c\" and the spec file \"mib.spec\"."
	exit 1
}

[ X"$1" != X"-h" ] || usage
 
case $CLUSTER in
	adev) CC=gcc
	  ;;
	alc) CC=gcc
	  ;;
	bgl) CC=gcc
	  ;;
	bgldev) CC=gcc
	  ;;
	gauss) CC=gcc
	  ;;
	odev) CC=gcc
	  ;;
	tdev) CC=gcc
	  ;;
	uxbgl) CC=gcc
	  ;;
	*) usage "This script needs to know what compiler to use for cluster $CLUSTER"
	  ;;
esac 
echo "Cluster $CLUSTER with compiler $CC"

MAKEFILE="Makefile"
[ -f $MAKEFILE.in ] || usage "There is no file $MAKEFILE.in here"
CONFIG_H="config.h"
MIB_SPEC="mib.spec"
[ -f $MIB_SPEC.in ] || usage "There is no file $MIB_SPEC.in here"
[ -f META ] || usage "There is no file META here"

VERSION=`grep VERSION META | cut -d':' -f2`
VERSION=${VERSION// /}
[ X"$VERSION" != X ] ||  usage "The META file did not yield a version"

rm -f $CONFIG_H >/dev/null 2>&1
echo "#ifndef CONFIG_H" >$CONFIG_H
echo "#define MIB_VERSION \"$VERSION\"" >> $CONFIG_H
MPI_H="/usr/lib/mpi/include/mpi.h"
MPI_DIR="/usr/lib/mpi"
[ -f $MPI_H -o -d $MPI_DIR ] || echo "#define MPI_NOT_INSTALLED" >> $CONFIG_H
echo "#endif /* CONFIG_H */" >> $CONFIG_H

rm -f $MAKEFILE >/dev/null 2>&1
cat $MAKEFILE.in  | sed "s/%CC%/$CC/" | sed "s/%VERSION%/$VERSION/" > $MAKEFILE

cd tools
rm -f $MAKEFILE >/dev/null 2>&1
cat $MAKEFILE.in  | sed "s/%CC%/$CC/" | sed "s/%VERSION%/$VERSION/" > $MAKEFILE
cd ..

# Suppress making the pdf documentation if the pdflatex executable is 
# not available.  Later I could split this out to just latex without dvi2pdf.
PDFLATEX=`which pdflatex`
[ X"$PDFLATEX" != X ] || touch doc_dummy 
cd doc
rm -f $MAKEFILE >/dev/null 2>&1
cat $MAKEFILE.in  | sed "s/%VERSION%/$VERSION/" > $MAKEFILE
cd ..

rm -f $MIB_SPEC >/dev/null 2>&1
cat $MIB_SPEC.in  | sed "s/%VERSION%/$VERSION/" > $MIB_SPEC


 
